{"version":3,"sources":["shared/components/Section/Section.module.css","shared/components/Input/Input.module.css","components/ContactList/ContactList.module.css","shared/components/Button/Button.module.css","components/FormContacts/FormContacts.module.css","shared/components/Section/Section.jsx","shared/components/Input/Input.jsx","shared/components/Button/Button.jsx","components/FormContacts/FormContacts.jsx","components/ContactList/ContactList.jsx","App.js","index.js"],"names":["module","exports","Section","title","children","classEl","className","styles","container","forChildrens","id","nanoid","Input","props","labelName","value","onChange","type","name","pattern","placeholderValue","filterComponent","formComponent","htmlFor","formLabel","formInput","placeholder","defaultProps","undefined","Button","text","onClick","submitBtn","btn","FormContacts","state","number","handleInputChange","e","target","setState","handleSubmit","preventDefault","submitedData","resetForm","this","onSubmit","form","Component","ContactList","contacts","onDeleteItem","contactList","map","contactItem","src","toonavatar","generate_avatar","alt","width","contactImg","App","filter","checkContactHandler","addContactHandler","alert","deleteContactHandler","contact","filterChangeHandler","currentTarget","filterContactsHandler","lowerCaseFilter","toLowerCase","includes","lowerCaseName","find","prevState","localStorage","getItem","parsedContacts","JSON","parse","_","prevStateContacts","updetedStateContacts","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e5b1712.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"Section_contacts__jyYo-\",\"phonebook\":\"Section_phonebook__1EDWL\",\"container\":\"Section_container__17dCd\",\"title\":\"Section_title__27WvV\",\"forChildrens\":\"Section_forChildrens__1rYaw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formComponent\":\"Input_formComponent__245Y7\",\"filterComponent\":\"Input_filterComponent__EgHVi\",\"formLabel\":\"Input_formLabel__1kEl5\",\"formInput\":\"Input_formInput__7P5fN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1o0-S\",\"contactItem\":\"ContactList_contactItem__3wxeH\",\"contactImg\":\"ContactList_contactImg__3xUYa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"Button_submitBtn__1aN6S\",\"btn\":\"Button_btn__26hQW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormContacts_form__Y9pK-\"};","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children, classEl }) => {\r\n  return (\r\n    <section className={styles[classEl]}>\r\n      <div className={styles.container}>\r\n        <h2 className={styles.title}>{title}</h2>\r\n        <div className={styles.forChildrens}>{children}</div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport { nanoid } from 'nanoid';\r\nimport styles from './Input.module.css';\r\n\r\nconst id = nanoid();\r\n\r\nconst Input = props => {\r\n  const { labelName, value, onChange, type, name, pattern, title, placeholderValue } = props;\r\n\r\n  return (\r\n    <div className={name === 'filter' ? styles.filterComponent : styles.formComponent}>\r\n      <label htmlFor={id} className={styles.formLabel}>\r\n        {labelName}:\r\n      </label>\r\n      <input\r\n        className={styles.formInput}\r\n        id={id}\r\n        value={value}\r\n        onChange={onChange}\r\n        type={type}\r\n        name={name}\r\n        pattern={pattern}\r\n        title={title}\r\n        placeholder={placeholderValue}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport default Input;\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  placeholder: undefined,\r\n};\r\n\r\nInput.propTypes = {\r\n  labelName: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  pattern: PropTypes.string,\r\n  title: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ type, text, onClick }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick ? onClick : undefined}\r\n      type={type}\r\n      className={type === 'submit' ? styles.submitBtn : styles.btn}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.defaultProps = {\r\n  type: 'button',\r\n  onClick: undefined,\r\n};\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  text: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Input from '../../shared/components/Input';\r\nimport Button from '../../shared/components/Button';\r\n\r\nimport styles from './FormContacts.module.css';\r\n\r\nclass FormContacts extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.submitedData(this.state);\r\n    this.resetForm();\r\n  };\r\n\r\n  resetForm = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    const { handleSubmit, handleInputChange } = this;\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={handleSubmit} className={styles.form}>\r\n          <Input\r\n            labelName=\"Name\"\r\n            value={name}\r\n            onChange={handleInputChange}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            placeholderValue=\"Jane Doe\"\r\n          />\r\n\r\n          <Input\r\n            labelName=\"Number\"\r\n            value={number}\r\n            onChange={handleInputChange}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            placeholderValue=\"+38-099-123-45-67\"\r\n          />\r\n\r\n          <Button type=\"submit\" text=\"Add contact\" />\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormContacts;\r\n\r\nFormContacts.propTypes = {\r\n  submitedData: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport toonavatar from 'cartoon-avatar';\r\nimport styles from './ContactList.module.css';\r\n\r\nimport Button from '../../shared/components/Button';\r\n\r\nconst ContactList = ({ contacts, onDeleteItem }) => {\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.contactItem}>\r\n          <img\r\n            src={toonavatar.generate_avatar()}\r\n            alt=\"img\"\r\n            width=\"60\"\r\n            className={styles.contactImg}\r\n          />\r\n          <div>\r\n            <p>{name}:</p>\r\n            <p>{number}</p>\r\n          </div>\r\n\r\n          <Button type=\"button\" text=\"&#128473;\" onClick={() => onDeleteItem(id)} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  onDeleteItem: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport Section from './shared/components/Section';\nimport FormContacts from './components/FormContacts';\nimport Input from './shared/components/Input';\nimport ContactList from './components/ContactList';\n\nimport './styles/App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(_, prevState) {\n    const prevStateContacts = prevState.contacts;\n    const updetedStateContacts = this.state.contacts;\n\n    if (updetedStateContacts !== prevStateContacts) {\n      localStorage.setItem('contacts', JSON.stringify(updetedStateContacts));\n    }\n  }\n\n  checkContactHandler = ({ name, number }) => {\n    if (!name) {\n      return alert('Please enter name!');\n    }\n    if (!number) {\n      return alert('Please enter number!');\n    }\n    this.addContactHandler({ name, number });\n  };\n\n  deleteContactHandler = id => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  filterChangeHandler = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  filterContactsHandler = () => {\n    const { contacts, filter } = this.state;\n\n    if (!filter) {\n      return contacts;\n    }\n\n    const lowerCaseFilter = filter.toLowerCase();\n\n    const filteredContacts = contacts.filter(({ name }) => {\n      const lowerCaseName = name.toLowerCase();\n      return lowerCaseName.includes(lowerCaseFilter);\n    });\n\n    return filteredContacts;\n  };\n\n  addContactHandler = ({ name, number }) => {\n    const lowerCaseName = name.toLowerCase();\n    const contact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n\n    const findInArray = this.state.contacts.find(({ name }) => {\n      const lowerCaseStateName = name.toLowerCase();\n      return lowerCaseStateName === lowerCaseName;\n    });\n\n    if (findInArray) {\n      return alert(`${name} is already in your contacts!`);\n    }\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  render() {\n    const {\n      filterContactsHandler,\n      checkContactHandler,\n      filterChangeHandler,\n      deleteContactHandler,\n    } = this;\n\n    const contacts = filterContactsHandler();\n\n    return (\n      <>\n        <Section title={'Phonebook'} classEl={'phonebook'}>\n          <FormContacts submitedData={checkContactHandler} />\n          <Input\n            labelName=\"Find contact by name\"\n            value={this.state.filter}\n            onChange={filterChangeHandler}\n            type=\"text\"\n            name=\"filter\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholderValue=\"Search\"\n          />\n        </Section>\n\n        <Section title={'Contacts'} classEl={'contacts'}>\n          <ContactList contacts={contacts} onDeleteItem={deleteContactHandler} />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}